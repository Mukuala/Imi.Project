@using Syncfusion.Blazor.DropDowns
@inject IJSRuntime JsRuntime
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@page "/movies"
@page "/movies/{movieId:long}"
@page "/movies/{action}"
@page "/movies/{action}/{movieId:long}"


@if (user.Id == null && storedToken == null)
{
    <div style="margin:30px">
        <button class=" btn btn-secondary align-right" @onclick="GetJwtToken">
            Log In
        </button>
    </div>
}
else
{
        <h2>Hello Admin @user.FirstName</h2>
}

@if (Action == null && movie == null && MovieId == 0)
{
    <a style="margin:30px" href="/movies/create" class="btn btn-primary">Add new movie</a>

    <div class="container">
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5 align-items-stretch">

            @foreach (var movie in movies)
            {
                <div class="col mb-5">
                    <a href="/movies/@movie.Id">
                        <div class="h-100 card box-shadow text-center">
                            <div class="card-header d-flex align-items-center justify-content-center">
                                <h6 class="my-0 font-weight-normal flex-grow-1">@movie.Name</h6>
                            </div>
                            <img src="@movie.Image" style="object-fit:cover" height="200" />

                        </div>
                    </a>
                </div>
            }
        </div>
    </div>
}
@if (Action == null && movie != null && MovieId != 0)
{
    <div class="container">
        <div class="card border-dark mx-auto" style="width:75%">
            <div class="card-header" style="background-color:white">
                <h2>@movie.Name</h2>
            </div>
            <img src="@movie.Image" class="card-img-top" />
            <div class="card-body">
                <table class="table table-striped">
                    <tbody>
                        <tr>
                            <th>Release Date</th>
                            <td>@movie.ReleaseDate</td>
                        </tr>
                        <tr>
                            <th>Actor(s)</th>
                            <td>
                                @foreach (var actor in movie.Actors)
                                {
                                    <p>
                                        @actor.Name
                                    </p>
                                }

                            </td>
                        </tr>
                        <tr>
                            <th>Genre(s)</th>
                            <td>
                                @foreach (var genre in movie.Genres)
                                {
                                    <p>@genre.Name</p>
                                }
                            </td>
                        </tr>
                        <tr>
                            <th>Duration</th>
                            <td>@movie.Duration min</td>
                        </tr>
                        <tr>
                            <th>Rating</th>
                            <td>@movie.AverageRating/10</td>
                        </tr>
                        <tr>
                            <th>Description</th>
                            <td>@movie.Description</td>
                        </tr>
                        <tr>
                            <th>Trailer</th>
                            <td>
                                @if (!string.IsNullOrWhiteSpace(movie.EmbeddedTrailerUrl))
                                {
                                    <iframe src="@movie.EmbeddedTrailerUrl" height="300" frameborder="0"> </iframe>
                                }
                                else
                                {
                                    <p>No trailer has been added yet.</p>
                                }
                            </td>
                        </tr>
                    </tbody>
                </table>
                <br />
                <button class="btn-danger btn-block" data-toggle="modal" data-target="#delete">Delete</button>
                <a href="/movies/edit/@MovieId" class="btn btn-primary btn-block">Edit</a>
            </div>
        </div>
    </div>
}
else if (Action == "create" || Action == "edit")
{
    <EditForm Model="@movieRequest" OnValidSubmit="SaveMovie">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label for="name">Name: </label>
            <InputText id="name" @bind-Value="movieRequest.Name" class="form-control"></InputText>
            <ValidationMessage For="@(() =>movieRequest.Name)" />
        </div>
        <div class="form-group">
            <label for="description">Description: </label>
            <InputTextArea id="description" @bind-Value="movieRequest.Description" class="form-control"></InputTextArea>
            <ValidationMessage For="@(() =>movieRequest.Description)" />
        </div>
        <div class="form-group">
            <label for="duration">Duration: </label>
            <InputNumber id="duration" @bind-Value="movieRequest.Duration" class="form-control"></InputNumber>
            <ValidationMessage For="@(() =>movieRequest.Duration)" />
        </div>
        <div class="form-group">
            <label for="rating">Rating: </label>
            <Syncfusion.Blazor.Inputs.SfNumericTextBox Decimals="1" Max="10" Min="0" id="rating" @bind-Value="movieRequest.AverageRating" class="form-control"></Syncfusion.Blazor.Inputs.SfNumericTextBox>
            <ValidationMessage For="@(() =>movieRequest.AverageRating)" />
        </div>
        <div class="form-group">
            <label for="releaseDate">ReleaseDate: </label>
            <InputDate id="releaseDate" @bind-Value="movieRequest.ReleaseDate" class="form-control"></InputDate>
            <ValidationMessage For="@(() =>movieRequest.ReleaseDate)" />
        </div>
        <div class="form-group">
            <label for="actors">Actor(s): </label>
            <SfMultiSelect id="actors" TValue="IEnumerable<long>" TItem="ActorResponseDto" @bind-Value="movieRequest.ActorsId" DataSource="@actors" AllowFiltering="true" class="form-control">
                <MultiSelectFieldSettings Text="Name" Value="Id" ></MultiSelectFieldSettings>
            </SfMultiSelect>
        </div>
        <div class="form-group">
            <label for="genres">Genre(s): </label>
            <SfMultiSelect id="genres" @bind-Value="movieRequest.GenresId" DataSource="@genres" AllowFiltering="true" class="form-control">
                <MultiSelectFieldSettings Text="Name" Value="Id"></MultiSelectFieldSettings>
            </SfMultiSelect>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </EditForm>
}


@code {
    async Task GetJwtToken()
    {
        var responseDto = await movieService.LogInGetJwtToken();
        await localStorage.SetItemAsync("JwtToken", responseDto.JwtToken);
        storedToken = await localStorage.GetItemAsync<string>("JwtToken");
        user = await movieService.GetJwtUserProfile(storedToken);
    }
}
