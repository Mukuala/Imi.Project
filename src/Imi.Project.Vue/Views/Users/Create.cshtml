<div class="row" id="app">
    <div class="col-sm-6 text-black">

        <div class="d-flex align-items-center ">

            <form style="width: 50rem;" v-on:submit.prevent="submitForm">

                <h3 class="fw-normal mb-3 pb-3" style="letter-spacing: 1px;">Create new user</h3>

                <div class="form-outline mb-4">
                    <label>Username</label>
                    <input class="form-control form-control-lg" placeholder="Username" v-model="form.userName" required />
                </div>

                <div class="form-outline mb-4">
                    <label>First Name</label>
                    <input class="form-control form-control-lg" placeholder="First Name" v-model="form.firstName" required />
                </div>

                <div class="form-outline mb-4">
                    <label>Last Name</label>
                    <input class="form-control form-control-lg" placeholder="Last Name" v-model="form.lastName" required />
                </div>

                <div class="form-outline mb-4">
                    <label>Date of birth</label>
                    <input type="date" class="form-control form-control-lg" v-model="form.birthday" required />
                </div>

                <div class="form-outline mb-4">
                    <label>Email</label>
                    <input type="email" class="form-control form-control-lg" v-model="form.email" required />
                </div>

                <div class="form-outline mb-4">
                    <label>Password</label>
                    <input type="password" class="form-control form-control-lg" placeholder="Password" v-model="form.password" required />
                </div>

                <div class="form-outline mb-4">
                    <label>Confirm pasword</label>
                    <input type="password" class="form-control form-control-lg" placeholder="Confirm password" v-model="form.passwordConfirm" required />
                </div>
                <div class="form-group">
                    <label>Image</label>
                    <input id="imageFile" type="file" style="background-color:wheat" class="form-control" accept="image/png, image/gif, image/jpeg" />
                </div>
                <div class="form-outline mb-4">
                    <ul v-for="error in errors">
                        <li class="text-danger">{{error}}</li>
                    </ul>
                </div>

                <div class="pt-1 mb-4">
                    <button class="btn btn-info btn-lg btn-block" type="submit">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    var formData = new FormData();
    var jwtToken = window.localStorage.getItem('jwtToken');
    const config = {
        headers: {
            Authorization: `Bearer ${jwtToken}`
        }
    };
    var apiURL = 'http://192.168.151.180:5000/api/Users/'
    var app = new Vue({
        el: '#app',
        data: {
            errors: [],
            image: null,
            form: {
                id: CreateGuid(),
                userName: '',
                firstName: '',
                lastName: '',
                password: '',
                passwordConfirm: '',
                email: '',
                birthday: null
            },
            userId: ''
        },
        methods: {
            submitForm: async function () {

                await axios.post(apiURL, this.form, config)
                    .then(response => {
                        this.userId = response.data.id
                        this.image = document.getElementById('imageFile').files[0];
                        formData.append("image", this.image);

                        if (this.image == null) {
                            setTimeout(ReturnToUsers(), 500);
                        }
                    }).catch(function (error) {
                        console.log(JSON.stringify(error));
                        alert(error);
                    });
                if (this.userId != null && this.image != null) {
                    var self = this;
                    async function imgUpload(id) {
                        console.log(apiURL + id + "/image", this.image);
                        await axios
                            .post(apiURL + id + "/image", formData, config).then(response => {
                                setTimeout(ReturnToUsers(), 500);
                            })
                            .catch(function (error) {
                                console.log(JSON.stringify(error));
                                alert(error);
                                self.errors = error.response.data.errors;
                            });
                    };
                    imgUpload(this.userId);
                };
            }
        }
    });

    function ReturnToUsers() {
        window.location.href = 'http://localhost:5005/users';
    };

    function CreateGuid() {
        function S4() {
            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        }
        return (S4() + S4() + "-" + S4() + "-4" + S4().substr(0, 3) + "-" + S4() + "-" + S4() + S4() + S4()).toLowerCase();
    };

</script>

